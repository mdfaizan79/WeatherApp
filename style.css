*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Merriweather Sans", sans-serif;
}

/* //color theme */
:root {
    --text: #e9f4f2; 
    --background: #030707; 
    --primary: #9fded4; 
    --secondary: #227d6d; 
    --accent: #51dbc3; 
}

.wrapper {
    height: 100vh;
    width: 100vw;
    overflow: hidden;
    color: var(--text);
    background-color: var(--background);
    background-image: linear-gradient(160deg, var(--background) 0%, var(--secondary) 100%);
}

/* Color gradient animation */
.css-selector {
    background: linear-gradient(180deg, #6fd6bb, #89d8e8);
    background-size: 400% 400%;
    -webkit-animation: AnimationName 40s ease infinite;
    -moz-animation: AnimationName 40s ease infinite;
    animation: AnimationName 40s ease infinite;
}

@-webkit-keyframes AnimationName {
    0% { background-position: 0% 29%; }
    50% { background-position: 100% 72%; }
    100% { background-position: 0% 29%; }
}

@-moz-keyframes AnimationName {
    0% { background-position: 0% 29%; }
    50% { background-position: 100% 72%; }
    100% { background-position: 0% 29%; }
}

@keyframes AnimationName {
    0% { background-position: 0% 29%; }
    50% { background-position: 100% 72%; }
    100% { background-position: 0% 29%; }
}

/* Heading and Tab Container */
h1 {
    text-align: center;
    /* text-transform: uppercase; */
    word-spacing: 2px;
    letter-spacing: 1.75px;
    margin-block: 2rem;
    color: var(--text);
}

.tabContainer {
    width: 90%;
    max-width: 550px;
    display: flex;
    justify-content: space-between;
    margin: 0 auto;
    margin-top: 2rem;
}

.tab {
    cursor: pointer;
    font-size: 0.875rem;
    letter-spacing: 1.75px;
    padding: 5px 8px;
    text-transform: capitalize;
    color: var(--text);
}

.tab.currentTab {
    background-color: rgba(159, 222, 212, 0.5);
    border-radius: 4px;
}

/* Main Container */
.container {
    margin-block: 4rem;
}

.btn {
    all: unset;
    font-size: 0.85rem;
    text-transform: uppercase;
    padding: 10px 30px;
    border-radius: 5px;
    cursor: pointer;
    background-color: var(--secondary);
    color: var(--text);
}

.subContainer {
    width: 90%;
    max-width: 1000px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* Form Container */
.formContainer {
    width: 90%;
    max-width: 550px;
    margin: 0 auto;
    margin-bottom: 2rem;
    display: none;
    align-items: center;
    justify-content: center;
    gap: 0 10px;
}

.formContainer.active {
    display: flex;
}

.formContainer input {
    all: unset;
    width: calc(100% - 80px);
    height: 40px;
    padding: 0 20px;
    background-color: rgba(159, 222, 212, 0.5);
    border-radius: 10px;
    color: var(--text);
}

.formContainer input:focus {
    outline: 3px solid rgba(255, 255, 255, 0.7);
}

.formContainer input::placeholder {
    color: rgba(255, 255, 255, 0.7);
}

.formContainer .btn {
    width: 40px;
    height: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: unset;
    border-radius: 100%;
    background-color: var(--accent);
}

.formContainer .btn img {
    object-fit: contain;
}

/* Grant Location */
.grantLocationContainer {
    display: none;
}

.grantLocationContainer.active {
    display: flex;
}

.grantLocationContainer img {
    margin-bottom: 1.5rem;
}

.grantLocationContainer p:first-of-type {
    font-weight: 600;
    font-size: 1.75rem;
    text-align: center;
    color: var(--text);
}

.grantLocationContainer p:last-of-type {
    font-size: 0.75rem;
    text-align: center;
    margin-top: 0.75rem;
    margin-bottom: 1.75rem;
    font-weight: 300;
    letter-spacing: 0.75px;
    color: var(--text);
}

/* Loading Container */
.loadingContainer {
    display: none;
}

.loadingContainer.active {
    display: flex;
}

.loadingContainer p {
    text-transform: uppercase;
    color: var(--text);
}

.userInfoContainer {
    display: none;
}

.userInfoContainer.active {
    display: flex;
}

.userInfoContainer p {
    font-size: 1.5rem;
    font-weight: 200;
    color: var(--text);
}

.userInfoContainer img {
    height: 70px;
    width: 70px;
}

.name {
    display: flex;
    align-items: center;
    gap: 0 0.5rem;
    margin-bottom: 0.7rem;
}

.name img {
    width: 33px;
    height: 33px;
    object-fit: contain;
}

/* temperature */
.userInfoContainer p[data-temp] {
    font-size: 2.25rem;
    font-weight: 700;
    color: var(--text);
}

.userInfoContainer p[data-weatherDesc] {
    text-transform: capitalize;
    font-size: 1.2rem;
    color: var(--text);
}

.parameterContainer {
    width: 90%;
    display: flex;
    justify-content: center;
    gap: 10px 20px;
    margin: 1.6rem auto 0;
    flex-wrap: wrap;
}

.parameter {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: column;
    background-color: rgba(159, 222, 212, 0.5);
    padding: 0.8rem;
    border-radius: 5px;
    width: 30%;
    max-width: 200px;
    gap: 5px 0;
}

.parameter p {
    font-size: 1rem;
    font-weight: 600;
    text-transform: uppercase;
    color: var(--text);
}

.parameter img {
    width: 50px;
    height: 50px;
    object-fit: cover;
}

.parameterValue {
    font-size: 0.8rem;
    font-weight: 200;
    color: var(--text);
}

.errorContainer {
    display: none;
}

.errorContainer.active {
    display: flex;
    gap: 1rem 0;
}

.errorContainer p {
    text-align: center;
    color: var(--text);
}

.errorContainer img {
    width: 100%;
    max-width: 300px;
    aspect-ratio: 1 / 1;
    object-fit: cover;
}

/* Tab Hover Effect */
.tab:hover {
    background-color: rgba(159, 222, 212, 0.3);
    color: var(--accent);
    transform: scale(1.05);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); 
    transition: transform 0.3s ease, background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
}

/* Button Hover Effect  */
.btn:hover {
    background-image: linear-gradient(45deg, var(--accent), var(--secondary));
    color: var(--background);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    transform: translateY(-2px); 
    transition: background-image 0.4s ease, color 0.3s ease, transform 0.2s ease, box-shadow 0.4s ease;
}

/* Input Hover Effect with Glow */
.formContainer input:hover {
    background-color: rgba(159, 222, 212, 0.7);
    box-shadow: 0 0 8px rgba(255, 255, 255, 0.5); 
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

/* Input Focus Hover Effect  */
.formContainer input:focus {
    outline: none;
    border: 2px solid var(--accent);
    box-shadow: 0 0 10px var(--accent);
    transition: box-shadow 0.3s ease, border 0.3s ease;
}

/* Parameter Box Hover Effect  */
.parameter:hover {
    background-color: var(--accent);
    transform: scale(1.05); 
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3); 
    transition: background-color 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
}

/* Adding hover effects for error container image */
/* .errorContainer img:hover {
    transform: rotate(10deg) scale(1.05); 
    transition: transform 0.3s ease;
} */
